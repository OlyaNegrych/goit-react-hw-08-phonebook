{"version":3,"file":"static/js/644.a0977cdd.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/ContactForm/ContactForm.styled.jsx","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\nfont-size: 16px;\nfont-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 16px;\n  font-weight: 400;\n  border-radius: 4px;\n  margin-bottom: 10px;\n\n  :focus-within {\n    border: 2px solid #40c4ff;\n    outline: none;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 4px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  :hover,\n  :focus {\n    background-color: #00e676;\n    font-weight: 700;\n  }\n`;","import { addContact } from 'redux/contacts/operations';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from '../../../redux/contacts/selectors';\nimport { Label, Input, AddBtn } from './ContactForm.styled';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(),\n  number: Yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const checkNameInList = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkNameInList) {\n      Notiflix.Report.warning(`${name} is already in contacts`);\n      return resetForm();\n    }\n\n    const contact = { id: nanoid(4), name, number };\n    dispatch(addContact(contact));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form>\n        <Label>\n          Name\n          <br />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <br />\n        <Label>\n          Number\n          <br />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <br />\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: 16px;\n  font-weight: 400;\n  border-radius: 4px;\n\n  :focus-within {\n    border: 2px solid #40c4ff;\n    outline: none;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from '../../../redux/contacts/selectors';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <br />\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n   margin-bottom: 10px;\n   display: flex;\n   justify-content: space-between;\n `;\n\n export const DeleteBtn = styled.button`\n   font-size: 16px;\n   font-weight: 500;\n   border-radius: 4px;\n   margin-left: 10px;\n   :hover,\n   :focus {\n     background-color: red;\n     font-weight: 700;\n   }\n `;","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, updateContact } from 'redux/contacts/operations';\nimport { DeleteBtn } from './ContactList.styled';\nimport { ContactItem } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleUpdateContact = id => {\n    dispatch(updateContact(id));\n  };\n\nconst handleDeleteContact = id => {\n  dispatch(deleteContact(id));\n};\n  \n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          {name}: {number}\n          <DeleteBtn type=\"button\" onClick={() => handleUpdateContact(id)}>\n            Edit\n          </DeleteBtn>\n          <DeleteBtn type=\"button\" onClick={() => handleDeleteContact(id)}>\n            Delete\n          </DeleteBtn>\n        </ContactItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\n  padding: 15px;\n  width: 400px;\n  border: 1px solid black;\n  border-radius: 4px;\n  box-shadow: 1px 1px 25px 1px rgba(0, 0, 0, 0.55);\n`;\n","import React from 'react';\nimport {SectionBox} from '../Section/Section.styled'\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionBox>\n      <h2>{title}</h2>\n      {children}\n    </SectionBox>\n  );\n};\n\nexport default Section;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../../components/Contacts/ContactForm/ContactForm';\nimport Filter from '../../components/Contacts/Filter/Filter';\nimport ContactList from 'components/Contacts/ContactList/ContactList';\nimport Section from '../../components/Section/Section';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../../redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <br />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","Label","styled","Input","Field","AddBtn","validationSchema","Yup","required","number","initialValues","dispatch","useDispatch","useSelector","onSubmit","resetForm","checkNameInList","some","Notiflix","id","nanoid","addContact","type","pattern","title","FilterLabel","FilterInput","value","onChange","e","setFilter","target","ContactItem","DeleteBtn","visibleContacts","map","onClick","updateContact","handleUpdateContact","deleteContact","handleDeleteContact","SectionBox","children","useEffect","fetchContacts"],"sourceRoot":""}