{"version":3,"file":"static/js/877.b631e840.chunk.js","mappings":"sNAGaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,SAba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAGC,WACE,sCAEE,kBAAOC,KAAK,QAAQC,KAAK,cAE3B,mBACA,yCAEE,kBAAOD,KAAK,WAAWC,KAAK,iBAE9B,mBACA,mBAAQD,KAAK,SAAb,sBAGL,EC/Bc,SAASE,IACtB,OACE,0BACE,SAAChB,EAAD,KAGL,C,qICLDiB,EAAAA,GAAAA,SAAAA,QAAyB,wCAEzB,IAAMC,EAAgB,SAAAC,GACpBF,EAAAA,GAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDE,EACzD,EAMYC,GAAWC,EAAAA,EAAAA,IACtB,gBADsC,mCAEtC,WAAOC,EAAaC,GAApB,gGAEsBN,EAAAA,GAAAA,KAAW,gBAAiBK,GAFlD,cAEUE,EAFV,OAGIN,EAAcM,EAAIC,KAAKN,OAH3B,kBAIWK,EAAIC,MAJf,yDAMWF,EAASG,gBAAgB,KAAMC,UAN1C,yDAFsC,yDAa3BnB,GAAQa,EAAAA,EAAAA,IACnB,aADmC,mCAEnC,WAAOC,EAAaC,GAApB,gGAEsBN,EAAAA,GAAAA,KAAW,eAAgBK,GAFjD,cAEUE,EAFV,OAGIN,EAAcM,EAAIC,KAAKN,OAH3B,kBAIWK,EAAIC,MAJf,yDAMWF,EAASG,gBAAgB,KAAMC,UAN1C,yDAFmC,0DAafN,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAOO,EAAGL,GAAV,0FAE5CN,EAAAA,GAAAA,KAAW,iBAFiC,OA7BpDA,EAAAA,GAAAA,SAAAA,QAAAA,OAAAA,cAA8C,GA6BM,wEAK3CM,EAASG,gBAAgB,KAAMC,UALY,wDAAhB,0DAUXN,EAAAA,EAAAA,IACzB,eADyC,mCAEzC,WAAOO,EAAGL,GAAV,8EACQM,EAAQN,EAASO,WAGA,QAFjBC,EAAiBF,EAAMG,KAAKb,OAFpC,yCAKWI,EAASG,gBAAgB,yBALpC,uBASIR,EAAca,GATlB,SAUsBd,EAAAA,GAAAA,IAAU,aAVhC,cAUUO,EAVV,yBAWWA,EAAIC,MAXf,2DAaWF,EAASG,gBAAgB,KAAMC,UAb1C,0DAFyC,wD","sources":["components/Auth/LoginForm/LoginForm.jsx","pages/Login/LoginPage.jsx","redux/auth/operations.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <br />\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <br />\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/Auth/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/signup', credentials);\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/login', credentials);\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n\nexport const refreshUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue('Unable to fetch user');\n    }\n\n    try {\n      setAuthHeader(persistedToken);\n      const res = await axios.get('/users/me');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n"],"names":["LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","type","name","Login","axios","setAuthHeader","token","register","createAsyncThunk","credentials","thunkAPI","res","data","rejectWithValue","message","_","state","getState","persistedToken","auth"],"sourceRoot":""}